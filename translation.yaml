# Author
translation:
  source: "Oleh Papka [github](https://github.com/OlegPapka2) [LinkedIn](https://www.linkedin.com/in/oleh-papka-8b9ab0216/)"
  text_direction: "ltr" # Set to "rtl" for right-to-left languages

# Navigation
nav:
  episodes: "Розділи"
  about: "Про нас"
  ep1: "Чому нам потрібний HTTPS?"
  ep2: "Ключики"
  ep3: "Рукостискання"
  ep4: "Різниця між HTTPS, SSL, TLS"
  ep5: "Центри сертифікації"
  social: "Стати соціальним котиком"
  more_comics: "Читати ще"
  continue_reading: "Продовжити читання"

# Home page
home:
  title: "Як працює HTTPS"
  certificat_cta: "Почати читати"
  subtitle: "Як працює HTTPS... У коміксах!"
  p1: "Ви коли небудь думали чому іконка зеленого замочка з'являється в адресному рядку вашого браузера? І чому це важливо? Ми також, тому цей комікс саме для вас!"
  p2: "Поринь у захопливу подорож Сертифікотика (Certificat), Пташки-браузера (Browserbird) та Песика-компуктера (Compugter) і вони розкажуть, чому HTTPS настільки критичний для майбутнього інтернету і як це все працює в купі."
  p3: "Не дозволяйте Крабам-поганцям схопити вас (Ви зрозумієте в коміксі про, що це я). Ознайомтесь із тим як працює HTTPS і чому він так необхідний для вашої приватності."
  small_cta: "Відкрити комікс"

# Episode fragments for /episodes
fragment:
  ep1: "Почніть читати з цього розділу. Якщо це буде єдиним епізодом, який ви запам'ятаєте із цього коміксу нехай це буде він."
  ep2: "Щоб зрозуміти як працює HTTPS, вам потрібно знати як працює симетричне та асиметричне шифрування. Звучить страшно і складно, проте це зовсім не так."
  ep3: "Коли ви переглядаєте сайт захищений HTTP, ваш браузер і сервер, у точці зєднання, мають таємне рукостискання. Ми розберемо цей процес до найдрібніших деталей і покажемо на реальних прикладах як це відбувається, щоб ви могли привітати своїх друзів таємним рукостисканням."
  ep4: "Легко переплутати усі ці HTTPS, SSL та TLS. Ми досить часто використовуємо ці терміни взаємозамінно. Давайте поговоримо про кожен із них з невеликим зануренням в їх історію."
  ep5: "Що вони роблять? Навіщо вони нам? Як вони перевіряють сертифікати? Ох... Стільки питань на, які ми маємо відповісти в останньому розділі коміксу!"

# Episodes
ep1:
  1: "Чому нам потрібний HTTPS?"
  2: "Нам потрібний HTTPS з 3 причин."
  3: "Приватність, цілісність та ідентифікація."
  4: "Давайте спочатку поговоримо про приватність."
  5: "Я заручусь підтримкою своїх друзів."
  6: "no text"
  7: "Я надсилаю повіомлення Пташці-браузеру."
  8: "О ні! Це повідомлення не зашифроване!"
  9: "Краб прослуховує зєднання, для перехоплення повідомлень."
  10: "Ймовірно використовує для лихих цілей."
  11: "Приватність означає, що ніхто не може переглядати ваші повідомлення."
  12: "Поганий Краб. Поганий."
  13: "Коли ви відкриваєте вебсайт без HTTPS, я можу підгледіти ваш пароль."
  14: "Зелений замочок в адресному рядку вашого браузера означає, що жоден не дивиться за вами."
  15: "Причина номер 2: цілісність."
  16: "Процес пізнання прикладу!"
  17: "Я надсилаю ще одне не зашифроване повідомлення Пташці-браузеру."
  18: "Але перед тим як повідомлення потрапить до Пташки-браузера, я перехоплю його." 
  19: "Я зміню повідомлення, де напишу погані речі про Пташку-браузера і перешлю його їй."
  20: "Чого б це Песик-компуктер казав такі погані речі про мене?"
  21: "no text"
  22: "Це зазвичай зветься атакою «людина посередині» (man-in-the-middle)."
  23: "Але найгіршими є атаки «краб посередині»."
  24: "Поганий Краб. Поганий."
  25: "Цілісність означає, що повідомлення не буде зміненим до моменту, як прийде до місця призначення."
  26: "Я стежу за тим щоб ваше спілкування не було підроблено."  
  27: "Причина номер 3: ідентифікація."
  28: "Час прикладів!"
  29: "Ідентифікація означає, що я можу перевірити, що це повідомлення саме від Собачки-компуктера."
  30: "Цифровий підпис прикріплений до повідомлення дозволяє ідентифікувати відправника."
  31: "І цифровий підпиис це не кінцівка електронного листа, як би ви могли подумати. Кожен міг би скопіювати таке ;)"
  32: "І коли ви переглядаєте сайти в інтернеті, ідентифікація означає, що сайт, який ви відвідуєте справді той самий, який вам потрібний."
  33: "HTTPS, завдяки SSL сертифікатам, забезпечує, що ви з'єднанні саме з потрібним отримувачем."
  34: "Цей SSL сертифікат дійсний і був виданий акредитованим центром сертифікації ключів. Ок тут все гаразд."
  35: "Ми будемо говорити більше про SSL сертифікати і центри сертифікації згодом, тому продовжуйте читати далі."
  36: "В підсумку, приватність, цілісність та ідентифікація є основними причинами чому HTTPS такий важливий."
  next: "Далі у 'як працює HTTPS'..."
  next_teaser: "Тепер, як ми знаємо чому, наступним кроком буде ознайомлення із симетричним та асеметричним шифруванням. Звучить складно, але насправді все просто."

ep2:
  1: "Ключики"
  2: "HTTPS проходить довгий шлях для забезпечення приватності, цілісності та ідентифікації в інтернеті."
  3: "І першим на цьому шляху є механізм під назвою 'шифрування'."
  4-1: "Давайте поговоримо про два типи алгоритмів шифрування."
  4-2: "Блін. І де ж я залишив ключики?"
  5-1: "Накінець!"
  5-2: "Почнемо із алгоритму із симетричним ключем."
  6: "В даному випадку шифрування та дешифрування виконується одним ключем."
  7: "Перед надсиланням повідомлення Пташці-браузеру, я зашифрую його цим ключиком."
  8: "Ви можете уявити шифрування, так наче повідомлення помістили в скриньку і закрили ключем."
  9: "І лише той хто має дублікат ключа може відкрити скриньку і прочитати це повідомлення."
  10: "Це гарантує те, що скриньку ніхто не зможе відкрити допоки вона не дійде до людини, яка має потрібний ключик."
  11: "Коли Пташка-браузер отримає скриньку, вона відкриє її своїм ключиком і прочитає повідомлення."
  12: "Але важливо приховувати ключик від чужих очей. Не можна ділитись ключами в не зашифрованому вигляді або надсилати його із скринькою. Або ж тримати в своїй же кишеньці."
  13: "Пам'ятайте, що будь хто з ключиком може відкрити скриньку."
  14-1: "Приклад із скринькою - це гарно візуалізує шифрування, але це надто спрощене його представлення."
  14-2: "Давайте змінимо це!"
  15: "В реальних умовах, будь хто, дивлячись на повідомлення без ключика буде бачити лише незрозумілу 'абра-кадабру'."
  16: "Цей текст був згенерований алгоритмом шифрування."
  17: "Це є пафосним описом того, що текст при шифруванні пройшов кілька кроків обробки."
  18: "Текст перетворювався та розширювався кілька разів. Щоразу заплутуючи повідомлення ще більше."
  19: "Для розшифрування повідомлення, просто повторимо такі ж кроки, що і при шифруванні, але в зворотньому порядку."
  20: "Ключик шифрування перемішується із текстом, тому навіть якщо відомий алгоритм шифрування, без ключика повідомлення досі залишається 'абра-кадаброю'."
  21: "Ось приклад того як може виглядати ключик."
  22: "Одина із головних проблем із симетричними ключиками - це складність обміну ними."
  23: "Вам слід бути надзвичайно обережними із тим, як ви ділитесь ключиками."
  24: "Цього недоліку позбавлені асиметричні ключики."
  25: "Основна відмінність від симетричниих ключиків - це те, що у вас є 2 ключики."
  26: "Один ключик публічний, інший приватний. Вони у свою чергу парні та працюють разом."
  27-1: "Діліться своїми публічними ключиками із будь ким. Надсилайте не шифрованими, робіть стікери та хоть тату. Все що забажаєте! Він і так публічний!"
  27-2: "Я люблю татушки."
  28: "Песик-компуктер надсилає свій публічний ключик Пташці-браузеру."
  29: "І тепер я надсилаю повідомлення у відповідь, уже зашифроване публічним ключиком Песика."
  30: "Інакше кажучи, Пташка-браузер кладе своє повідомлення у скриньку і замикає її публічним ключиком Песика-компуктера."
  31: "Я тепер можу використати мій приватиний ключик, щоб прочитати повідомлення."
  32: "Це головний задум. Лише приватний ключик може відкрити скриньку, замкнуту публічним ключиком із пари."
  33: "Я використовую публічний ключик Пташки-браузера, щоб надіслати ще одне повідомлення."
  34: "Це добре не лише для приватності, але й для ідентифікації, оскільки ми знаємо на певне, що лише власник 2 ключів може прочитати повідомлення."
  35: "Далі ми поглянемо на те як симетричні та асиметричні ключики стають нам у пригоді коли ми відкриваємо сайт із SSL."
  next: "Далі у 'як працює HTTPS'..."
  next_teaser: "Слава шифруванню! А що далі? Вивчіть секретне рукостискання між браузером та інтернетом, що робить інформацію безпечною та захищеною."

ep3:
  1: "Рукостискання"
  2: "Коли ви лише почали читати комікс, ваш браузер відобразив зелений замочок в адресному рядку браузера."
  3: "Що ж зараз сталось?"
  4: "Ваш браузер зв’язався з нашим сервером, де розміщено цей комікс, і вони обидва встановили безпечне з’єднання для передачі повідомлень."
  5: "Але спершу, їм потрібно узгодити, як спілкуватись безпечно."
  6: "Якщо перемовини не увінчались успіхом, ваш браузер дасть вам знати і покаже помилку або застереження."
  7: "Якщо вдалось домовитись, ваш браузер із задоволенням покаже вам зелений замочок в адресному рядку."
  8: "Цей процес, перемовин між браузером і сервером, зветься 'рукостисканням'."
  9: "Це відбувається дуже швидко. Ми покажемо вам, як це працює."
  10: "Пташка-браузер буде вашим браузером."
  11: "Песик-компуктер буде нашим сервером."
  12: "Нумо, друзі, зробіть це!"
  13: "Готові? Ось як 'рукостискання' буде виглядати в сповільненій зйомці."
  14: "Зліва хлоп"
  15: "Справа хлоп"
  16: "Вертикально хоп"
  17: "Горизонтально хоп покрути"
  18: "Лоскітки"
  19: "Готово!"
  20: "Давай ще раз, але швидше."
  21: "Зліва хлоп - Справа хлоп - Хоп - Хоп покрути - Лоскітки."
  22: "Щ-Е Р-А-З!"
  23: "Стоп!"
  24: "Давайте розберемо все. Крок за кроком."
  25: "Перший крок: Зліва хлоп. Або ж привітання зі сторони клієнта."
  26: "Я надсилаю список SSL/TLS версій і алгортмів шифрування з якими можу працювати Песику-компуктеру."
  27: "А по-модному список алгоритмів шифрування називається 'набір шифрів' ('cipher suite')."
  28: "Тепер ти, як справжній гік."
  29: "SSL та TLS протоколи з часом еволюціонували, ми незабаром про це поговоримо."
  30: "І тоді я чекаю на відповідь від Песика-компуктера."
  31: "Крок два: Справа хлоп. Або ж привітання зі сторони сервера."
  32: "Я вибираю найкращі SSL/TLS і алгоритми шифрування, серед тих, які надіслав мені браузер, також зважаючи й на мої уподобання."
  33: "Я відповідаю моїм сертифікатом, який містить мій публічний ключик, щоб можна було перевірити хто я."
  34: "Крок три: Вертикально хоп. Або ж обмін ключиками клієнта."
  35: "Я перевіряю сертифікат Песика-компуктера, щоб перевірити що він справжній."
  36: "Я генерую 'попередній мастер ключик' ('pre-master key'), щоб ми могли використати його пізніше, коли створимо унікальний ключ."
  37: "Я шифрую цей попередній мастер ключик за допомогою публічного ключика Песика-компуктера і тоді надсилаю його Песику."
  38: "Крок чотири: Горизонтально хоп покрути. Або ж зміна специфікації шифру."
  39: "Я використовую свій приватний ключик, щоб дешифрувати попередній мастер ключик."
  40: "Досі уся комунікація між ними була в відкриту. Жодне повідомлення не було захищене."
  41: "Вони використали асиметричні ключики (публічний та приватний), щоб зашифрувати попередній мастер ключик, тому ніхто не може підглянути за ним."
  42: "Тепер вони разом згенерували один і той же 'спільний секрет' ('shared secret'), який вони збираються використовувати, як симетричний ключик."
  43: "І Пташка-браузер надсилає тестове повідомлення."
  44: "Песик-компуктер відповідає."
  45: "Крок п'ять: Лоскітки. Або ж тепер все захищено."
  46: "Тепер усі дані, які передаються між Пташкою-браузером і Песиком-компуктером захищені до кінця сесії."
  47: "Паролі, дані банківських карт, взагалі будь-що."
  48: "Легко ж, правда?"
  49: "Наступного разу коли відкриваєте сайт через HTTPS, потисни ручку браузеру тому, що ти знаєш це секретне рустискання."
  next: "Далі у 'як працює HTTPS'..."
  next_teaser: "HTTPS, SSL, TLS, о-йой! Скрутили голову ці словечки. Що ж вони означають? Хіба вони не означають одне і те ж?"

ep4:
  1: "Різниця між HTTPS, SSL, and TLS"
  2: "Легко сплутати усі ці терміни і використовувати їх взаємозамінно."
  3: "Давайте поглянемо на кожен з них і розберемось, яка ж різниця між ними."
  4: "Що таке HTTPS?"
  5: "HTTPS це захищена версія протоколу HTTP: протокол передачі гіпертексту."
  6: "HTTP це протокол який використовує ваш браузер і веб сервер, щоб комунікувати і обмінюватись інформацією."
  7: "Коли цей обмін інформацією зашифровано за допомогою SSL/TLS, ми називаємо це HTTPS. Буквочка 'S' відповідає за Безпеку (Secure)."
  8: "Щооо! Стоп! Я сказав SSL/TLS! Чому?"
  9: "Тому, що це саме час поговорити про SSL і TLS."
  10: "SSL відповідає за рівень захищених сокетів ('Secure Sockets Layer'). Протокол розроблений Netscape."
  11: "SSL це динозавр серед інтернет стандартів. Першій версії протоколу не вдалось вийти у світ, але 2 версія все-таки була оприлюднена разом із браузером Netscape 1.1 в 1995."
  12: "Згодом цього ж року Netscape випустив версію 3 тому, що версія 2 мала суттєві поблеми із безпекою."
  13: "Ми всі були щасливими котиками до 1999. Браузерні війни між Netscape та Microsoft, потреба в стандартизації, та Брітні Спірс - '...Baby One More Time' змінили світ, яким ми його знаємо. Уже назавжди."
  14: "Oops, I did it again. (Слова із однойменної пісні Брітні Спірс)"
  15: "Netscape надав права на SSL протокол відкритому міжнародному співтовариству проектувальників IETF (Internet Engineering Task Force)."
  16: "В кінці 1999, IETF представила TLS версії 1.0 (Що насправді було SSL 3.1)."
  17: "SSL перейменували на TLS: Transport Layer Security. Тим самим укарй всіх заплутали."
  18: "Дякую 1999."
  19: "TLS 1.0 став популярний і версію 1.1 випустили в 2006."
  20: "Через кілька років, в 2008, випустили TLS 1.2 для усунення кількох недоліків та експлойтів."
  21: "Хоча лише у 2013 починають наздоганяти тренди прогресу протоколів і додають підтримку TLS 1.2."
  22: "Щоб ще більше вас заплутати, підтримку SSL 3.0 було офіційно припинено 2015."
  23-1: "TLS 1.3 було підтверджено в 2018 і ваш браузер може вже підтримувати його."
  23-2: "Натисніть тут для перевірки версії TLS вашого браузера."
  23-3: "Але повернемось до нашої історії."
  24: "TLS 1.3 приніс значні покращення безпеки та позбувся старих слабких функцій."
  25: "Не переживайте якщо ваш браузер не підтримує цієї версії. TLS 1.2 досі є рекомендованою версією, звісно якщо ви читаєте це весною/літом 2020."
  26: "Давайте повторимо."
  27: "HTTPS це всього-на-всього HTTP протокол, але із шифруванням даних за допомогою SSL/TLS."
  28: "SSL це початковий уже застарілий протокол створений у Netscape в середині 90s."
  29: "TLS це протокол для безпечного шифрування в інтернеті, який підтримується організацією IETF."
  30: "І тепер ви знаєте історію."
  next: "Далі у 'як працює HTTPS'..."
  next_teaser: "Сертифікати та центри сертифікації: Що вони знають? Вони щось знають?? Нумо розбиратись!"

ep5:
  1: "Центри сертифікації"
  2: "Центри сертифікації (CA) це стороння організація із трьома основними цілями:"
  3: "1. Видача сертифікатів."
  4: "2. Підтвердження особистості власника сертифіката."
  5: "3. Підтвердження дійсності сертифіката."
  6: "Ви напевно чули про Symantec, Comodo, або ж Let's Encrypt, серед інших."
  7: "Центри сертифікації мають відповідати низці вимог безпеки та пройти безліч перевірок."
  8: "Потрібно, щоб центру сертифікації довіряли перш ніж нададуть доступ до root store (корневе сховище)."
  9: "Простими словами корневе сховище (root store) це база даних із довіреними центрами сертифікації."
  10: "Apple, Windows і Mozilla мають свої власні корневі сховища, які вони поперердньо встановлюють на ваш комп'ютер або девайс."
  11: "То ж, який сертифікат вам слід придбати? У вас вибір із трьох варіантів на ваш смак."
  12: "З перевіркою домену. Цей сертифікат лише перевіряє доменне ім'я й нічого більше. Вам мабуть, потрібний цей."
  13: "З перевіркою компанії. Цей сертифікат потребує перевірки та ручної верифікації компанії, якій видається сертифікат."
  14: "З розширеною перевіркою компанії. Цей сертифікат вимагає вичерпної перевірки компанії, якій видається сертифікат."
  15: "Усі дійсні сертифікати в кінцевому результаті відображають значок безпеки в адресному рядку. У сертифіках із розширеною перевіркою, зазвичай, міститься і назва компанії."
  16: "Але, як же перевіряються сертифікати?"
  17: "Коли центр сертифікації видає сертифікат, вони підписують його їхнім корневим сертифікатом, що є попередньо встановленим в їхньому корневому сховищі."
  18: "В більшості випадків це проміжний сертифікат, підписаний корневим сертифікатом."
  19: "Якщо трапиться щось страшне і корневий сертифікат буде скомпрометовано, то можна буде відкликати проміжні сертифікати, оскільки корневі сертифікати встановлено на кожному пристрої."
  20: "Гайда розглянемо процес перевірки сертифіката. Він базується на так званому 'ланцюжку довіри'('chain of trust')."
  21: "Ваш браузер з'єднується із сайтом за допомогою HTTPS і завантажує сертифікат."
  22: "Даний сертифікат не є корневим сертифікатом."
  23: "Ваш браузер завантажує сертифікат, який використовувався для підписання сертифікату на даному сайті."
  24: "Але цей сертифікат досі не є корневим сертифікатом."
  25: "Ваш браузер ще раз шукає сертифікат, який власне і підписав проміжний сертифікат."
  26: "Це потрібний корневий сертифікат! Уря!"
  27: "Увесь ланцюжок сертифікатів є довіреним, а тому і сертифікат даного сайту є перевіреним та надійним."
  28: "У випадку, якщо останній сертифікат не є корневим, або немає жодного сертифіката для завантаження - ланцюжок вважається ненадійним."
  29: "Але навіщо користуватись центрами сертифікації, якщо ви можете використовувати самопідписаний сертифікат?"
  30: "Самопідписаний сертифікат забезпечує такий же рівень шифрування, як і той, що згенерований відповідним органом."
  31: "І жодний краб не може підглянути за вашими даними."
  32: "А також не доведеться платити за їх використання!"
  33: "Так, але практично кожен браузер перевіряє чи сертифікат виданий довіреним органом."
  34: "Тому відвідувачів попереджають, що сертифікати не можна довіряти."
  35: "Самопідписані сертифікати корисні для тестування та внутрішніх мереж, але вам слід уникати їх використання для публічних сайтів."
  36: "Самопідписані сертифікати можуть бути підроблені. Адже усі вони кажуть: 'Довірся мені це я, чесно!'."
  37: "Але доверний сертифікат каже: 'Довірся мені, мене перевірено'."
  38: "Оскільки ми говоримо про довіру, дякую, що довіряєте нам і цій історії."
  39: "На жаль, на цьому вона завершується."
  40: "Ми сподіваємось, що вам сподобався цей комікс!"
  41: "До зустрічі у новому коміксі!"
  end-title: "Ура, у вас вийшло!"
  end-p1: "Ви завершили комікс! Щиро вдячні вам за те, що прочитали про HTTPS."
  end-p2: "А ще пропонуємо вам три дії, щоб відволікти вашу увагу від того факту, що цей комікс уже завершився."
  option-1: "Пройти тест"
  option-1-p: "Щоб засвоїти вивчене, ви можете перевірити ваші щойно здобуті знання і пройти тест про HTTPS. І ми навіть надішлемо вам сертифікат, якщо ваш результат буде досить високим."
  option-2: "Повернутись до соціальних мереж"
  option-2-p: "Звична людьська справа. Якщо ви хочете змусити нас швидше робити нові комікси, ось кілька прикладів, як це зробити."
  option-3: "Відвідати DNSimple"
  option-3-p: "Якщо комікс вам сподобався і вас потрібний SSL сертифікат для безпеки вашого сайту, або ж надійний як камінь та легкий у використанні DNS (не ми це сказали), або ж новий файний домен, погляньте тут."
  post-data: "P.S. Якщо ви хочете запропонувати новий епізод (будь ласка не треба, адже нам прийдеться змінювати цю сторінку) або ж написати відгук про існуючі,"
  post-data-link: "наші котячі вушка будуть раді це почути"